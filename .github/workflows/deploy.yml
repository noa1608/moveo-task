name: Deploy NGINX Instance

on:
  push:
    branches:
      - main
      - dev

env:
  AWS_DEFAULT_REGION: us-east-1
  TF_VAR_vpc_cidr: "10.0.0.0/16"
  TF_VAR_public_subnet_cidr_a: "10.0.9.0/24"
  TF_VAR_public_subnet_cidr_b: "10.0.10.0/24"
  TF_VAR_private_subnet_cidr: "10.0.11.0/24"
  TF_VAR_availability_zone_a: "us-east-1a"
  TF_VAR_availability_zone_b: "us-east-1b"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.6

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Import Existing Resources (If any)
      run: |
        terraform import aws_lb.nginx_lb arn:aws:elasticloadbalancing:us-east-1:084375543286:loadbalancer/app/nginx-lb/7d02a9d43b1dd958 || echo "nginx-lb already imported"
        terraform import aws_lb_target_group.nginx_tg arn:aws:elasticloadbalancing:us-east-1:084375543286:targetgroup/nginx-tg/aec3eb13e98869c8 || echo "nginx-tg already imported"

    - name: Initialize Terraform
      run: terraform init

    - name: Plan Terraform
      run: terraform plan -out=tfplan

    - name: Apply Terraform
      run: terraform apply -auto-approve tfplan
